import { autorun, createAtom, makeAutoObservable } from 'mobx';

import { DefaultError, QueryClient,QueryKey, QueryObserver, QueryObserverOptions } from '@tanstack/query-core';

const EMPTY_FUNCTION = () => {};

export class MobxQuery<
  TQueryFnData = unknown,
  TError = DefaultError,
  TData = TQueryFnData,
  TQueryData = TQueryFnData,
  TQueryKey extends QueryKey = Array<string>,
> {
  private atom = createAtom(
    'MobxQuery',
    () => this.subscribe(),
    () => this.unsubscribe()
  );

  private queryObserver: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>;
  private unsubscribeFn: VoidFunction;

  constructor(
    private queryClient: QueryClient,
    private getOptions: () => QueryObserverOptions<TQueryFnData, TError, TData, TQueryData, TQueryKey>
  ) {
    this.queryObserver = new QueryObserver(this.queryClient, this.defaultQueryOptions);
    this.unsubscribeFn = EMPTY_FUNCTION;

    makeAutoObservable(this);
  }

  get response() {
    this.atom.reportObserved(); // –°–æ–æ–±—â–∞–µ–º mobx, —á—Ç–æ –Ω–∞–±–ª—é–¥–∞–µ–º—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.
    return this.queryObserver.getOptimisticResult(this.defaultQueryOptions);
  }

  private subscribe() {
    const unsubscribeReaction = autorun(() => {
      this.queryObserver.setOptions(this.defaultQueryOptions);
    });

    const unsubscribeObserver = this.queryObserver.subscribe(() => {
      this.atom.reportChanged(); // –°–æ–æ–±—â–∞–µ–º mobx, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å.
    });

    this.unsubscribeFn = () => {
      unsubscribeObserver();
      unsubscribeReaction();
    };
  }

  private unsubscribe() {
    this.unsubscribeFn(); // –û—Ç–ø–∏—Å–∫–∞ –¥–ª—è –∫–æ–Ω—Ä–µ—Ç–Ω–æ–≥–æ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è (–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –∫–ª–∞—Å—Å–∞)
  }

  private get defaultQueryOptions() {
    return this.queryClient.defaultQueryOptions(this.getOptions());
  }
}


// üí°queryObserver.destroy() –∏—Å–ø–æ–ª—å–∑—É–µ–º, –∫–æ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–∞–µ–º –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª QueryObserver,
// —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –æ—Å–≤–æ–±–æ–¥–∏—Ç –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∏–º, —á—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏.

// –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å suspense - https://github.com/TanStack/query/blob/74c65cc2db0fa378c108448445f38464e1acd27a/packages/react-query/src/useBaseQuery.ts#L114